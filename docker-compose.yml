services:
##.NET APIs:
  externalapi.orchestrator:
    image: externalapiorchestrator
    restart: always
    build:
      context: .
      dockerfile: ExternalApi.Orchestrator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "8080:8080"
    networks:
      - nw       
  internalapi01.booking:
    image: internalapi01booking
    restart: always
    build:
      context: .
      dockerfile: InternalApi01.Booking/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Host=postgredb;Port=5432;Username=postgres;Password=postgres;Database=bookingapi
    ports:
      - "8081:8080"
    networks:
      - nw      
  internalapi02.payment:
    image: internalapi02payment
    restart: always
    build:
      context: .
      dockerfile: InternalApi02.Payment/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Server=sqldb;Database=PaymentDb;User Id=sa;Password=@Password581;Encrypt=False;TrustServerCertificate=True        
    ports:
      - "8082:8080"
    networks:
      - nw      
  internalapi03.notification:
    image: internalapi03notification
    restart: always
    build:
      context: .
      dockerfile: InternalApi03.Notification/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=redis:6379
    ports:
      - "8083:8080"     
    networks:
      - nw       
## Message broker:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"   
    networks:
      - nw
## Databases:
  postgredb:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookingapi
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - nw
  sqldb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=@Password581
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    networks:
      - nw
  redis:
    image: redis:7
    container_name: redis-server
    ports:
      - "6379:6379"
    restart: always
    networks:
      - nw
  ##  OTEL Collector:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      # - "4317:4317"
      # - "4318:4318"         
      - "8888:8888"         
      - "8889:8889"
    networks:
      - nw
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5    
    depends_on:
      jaeger:
        condition: service_started
## metrics:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    networks:
      - nw
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana      
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    networks:
      - nw
## logs:
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - nw      
## traces:
  tempo:
    image: grafana/tempo:2.3.1
    command: ["-config.file=/etc/tempo.yaml"]
    ports:
      - "3200:3200"      # Tempo HTTP API
      - "4317:4317"      # OTLP gRPC
      - "4318:4318"      # OTLP HTTP
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    networks:
      - nw      
  jaeger:
    image: jaegertracing/all-in-one:1.56
    ports:
      - "16686:16686"       
    networks:
      - nw 

volumes: 
  sqlvolume:
    driver: local
  pgdata:
    driver: local
  grafana-storage:
    driver: local
networks:
  nw:
    driver: bridge